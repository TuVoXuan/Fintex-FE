import type { NextPage } from 'next';
import { useForm } from 'react-hook-form';
import { AiOutlineGoogle, AiFillApple } from 'react-icons/ai';
import { FiLock, FiSmartphone } from 'react-icons/fi';
import { Button, Input } from '../components';
import { AuthLayout } from '../layouts';
import { useRouter } from 'next/router';
import { handleLoginGoogle } from '../util/google-login';
import { useAppDispatch } from '../hook/redux';
import APP_PATH from '../constants/app-path';
import { addRedirectUrl, setIsSignUp } from '../redux/reducers/otp-slice';
import { toastError } from '../util/toast';
import { userLoginPhone } from '../redux/actions/user-action';

interface Props {
    phone: string;
    password: string;
}

const SignIn: NextPage = () => {
    const router = useRouter();
    const dispatch = useAppDispatch();

    const {
        register,
        formState: { errors },
        handleSubmit,
    } = useForm<Props>();

    const onSubmit = async (data: any) => {
        try {
            await dispatch(userLoginPhone(data)).unwrap();
            router.push(APP_PATH.HOME);
        } catch (error) {
            toastError((error as IResponseError).error);
        }
    };

    const handleSendOtp = () => {
        dispatch(setIsSignUp(true));
        dispatch(addRedirectUrl(APP_PATH.SIGN_UP));
        router.push(APP_PATH.SEND_OTP);
    };

    const handleGoogle = () => {
        handleLoginGoogle(router, dispatch);
    };

    return (
        <AuthLayout title={'ƒêƒÉng nh·∫≠p'} subTitle={'üíïCh√†o m·ª´ng tr·ªü l·∫°i, ch√∫ng t√¥i nh·ªõ b·∫°nüíï'}>
            <div className="flex gap-5">
                <Button
                    icon={<AiOutlineGoogle size={24} />}
                    title="ƒêƒÉng nh·∫≠p b·∫±ng Google"
                    color="secondary-light"
                    onClick={handleGoogle}
                />
                <Button icon={<AiFillApple size={24} />} title="ƒêƒÉng nh·∫≠p b·∫±ng Apple" color="secondary-light" />
            </div>
            <div className="flex items-center gap-4">
                <div className="w-full h-0 border-t-2" />
                <h3>HO·∫∂C</h3>
                <div className="w-full h-0 border-t-2" />
            </div>
            <form id="login" onSubmit={handleSubmit(onSubmit)} className="space-y-9">
                <div className="space-y-5">
                    <Input
                        icon={<FiSmartphone size={24} />}
                        placeholder={'0987654321'}
                        type={'text'}
                        name={'phone'}
                        register={register}
                        options={{
                            required: { value: true, message: 'Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i' },
                            pattern: {
                                value: /(03|05|07|08|09|01[2689])+([0-9]{8})\b/,
                                message: 'S·ªë ƒëi·ªán tho·∫°i kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng',
                            },
                        }}
                        errors={errors.phone?.message}
                    />
                    <Input
                        icon={<FiLock size={24} />}
                        placeholder={'‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢'}
                        type={'password'}
                        name={'password'}
                        register={register}
                        options={{
                            required: { value: true, message: 'Vui l√≤ng nh·∫≠p password' },
                            maxLength: { value: 20, message: 'M·∫≠t kh·∫©u ch·ª©a kh√¥ng qu√° 20 k√≠ t·ª±' },
                            pattern: {
                                value: /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/,
                                message: 'M·∫≠t kh·∫©u ph·∫£i ch·ª©a √≠t nh·∫•t 8 k√≠ t·ª± g·ªìm ch·ªØ c√°i, s·ªë v√† k√≠ t·ª± ƒë·∫∑c bi·ªát',
                            },
                        }}
                        errors={errors.password?.message}
                    />
                </div>
                <div className="flex justify-between">
                    <div className="flex items-center gap-2">
                        <input type="checkbox" name="remember-me" />
                        <label htmlFor="remember-me">Nh·ªõ t√¥i</label>
                    </div>
                    <div>
                        <button>Qu√™n m·∫≠t kh·∫©u?</button>
                    </div>
                </div>

                <Button title="ƒêƒÉng nh·∫≠p" color="primary" form="login" typeBtn="submit" />
            </form>

            <div className="flex items-center justify-center gap-2">
                <p>B·∫°n ch∆∞a c√≥ t√†i kho·∫£n?</p>
                <button className="font-bold text-primary-80" onClick={handleSendOtp}>
                    ƒêƒÉng k√Ω
                </button>
            </div>
        </AuthLayout>
    );
};

export default SignIn;
